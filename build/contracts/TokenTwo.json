{
	"contractName": "TokenTwo",
	"abi": [
		{
			"constant": true,
			"inputs": [],
			"name": "name",
			"outputs": [
				{
					"name": "",
					"type": "string"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "_spender",
					"type": "address"
				},
				{
					"name": "_value",
					"type": "uint256"
				}
			],
			"name": "approve",
			"outputs": [
				{
					"name": "success",
					"type": "bool"
				}
			],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "totalSupply",
			"outputs": [
				{
					"name": "",
					"type": "uint256"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "_from",
					"type": "address"
				},
				{
					"name": "_to",
					"type": "address"
				},
				{
					"name": "_value",
					"type": "uint256"
				}
			],
			"name": "transferFrom",
			"outputs": [
				{
					"name": "success",
					"type": "bool"
				}
			],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "decimals",
			"outputs": [
				{
					"name": "",
					"type": "uint8"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "_value",
					"type": "uint256"
				}
			],
			"name": "burn",
			"outputs": [
				{
					"name": "success",
					"type": "bool"
				}
			],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"name": "",
					"type": "address"
				}
			],
			"name": "balanceOf",
			"outputs": [
				{
					"name": "",
					"type": "uint256"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "_from",
					"type": "address"
				},
				{
					"name": "_value",
					"type": "uint256"
				}
			],
			"name": "burnFrom",
			"outputs": [
				{
					"name": "success",
					"type": "bool"
				}
			],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "symbol",
			"outputs": [
				{
					"name": "",
					"type": "string"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "_to",
					"type": "address"
				},
				{
					"name": "_value",
					"type": "uint256"
				}
			],
			"name": "transfer",
			"outputs": [
				{
					"name": "success",
					"type": "bool"
				}
			],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "_spender",
					"type": "address"
				},
				{
					"name": "_value",
					"type": "uint256"
				},
				{
					"name": "_extraData",
					"type": "bytes"
				}
			],
			"name": "approveAndCall",
			"outputs": [
				{
					"name": "success",
					"type": "bool"
				}
			],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"name": "",
					"type": "address"
				},
				{
					"name": "",
					"type": "address"
				}
			],
			"name": "allowance",
			"outputs": [
				{
					"name": "",
					"type": "uint256"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"name": "initialSupply",
					"type": "uint256"
				},
				{
					"name": "tokenName",
					"type": "string"
				},
				{
					"name": "tokenSymbol",
					"type": "string"
				}
			],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"name": "from",
					"type": "address"
				},
				{
					"indexed": true,
					"name": "to",
					"type": "address"
				},
				{
					"indexed": false,
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "Transfer",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"name": "_owner",
					"type": "address"
				},
				{
					"indexed": true,
					"name": "_spender",
					"type": "address"
				},
				{
					"indexed": false,
					"name": "_value",
					"type": "uint256"
				}
			],
			"name": "Approval",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"name": "from",
					"type": "address"
				},
				{
					"indexed": false,
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "Burn",
			"type": "event"
		}
	],
	"bytecode": "0x60806040526002805460ff1916601217905534801561001d57600080fd5b50604051610b0f380380610b0f8339810180604052606081101561004057600080fd5b81516020830180519193928301929164010000000081111561006157600080fd5b8201602081018481111561007457600080fd5b815164010000000081118282018710171561008e57600080fd5b505092919060200180516401000000008111156100aa57600080fd5b820160208101848111156100bd57600080fd5b81516401000000008111828201871017156100d757600080fd5b505060025460ff16600a0a860260038190553360009081526004602090815260408220929092558651929550879450869350859261011792850190610164565b50805161012b906001906020840190610164565b50506002805460ff191681179081905560ff16600a0a94909402600381905533600090815260046020526040902055506101ff92505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101a557805160ff19168380011785556101d2565b828001600101855582156101d2579182015b828111156101d25782518255916020019190600101906101b7565b506101de9291506101e2565b5090565b6101fc91905b808211156101de57600081556001016101e8565b90565b6109018061020e6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461020157806379cc67901461022757806395d89b4114610253578063a9059cbb1461025b578063cae9ca5114610287578063dd62ed3e14610342576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806342966c68146101e4575b600080fd5b6100c1610370565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b0381351690602001356103fe565b604080519115158252519081900360200190f35b61017e610464565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561046a565b6101ce6104da565b6040805160ff9092168252519081900360200190f35b610162600480360360208110156101fa57600080fd5b50356104e3565b61017e6004803603602081101561021757600080fd5b50356001600160a01b031661055b565b6101626004803603604081101561023d57600080fd5b506001600160a01b03813516906020013561056d565b6100c161063e565b6101626004803603604081101561027157600080fd5b506001600160a01b038135169060200135610698565b6101626004803603606081101561029d57600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156102cd57600080fd5b8201836020820111156102df57600080fd5b8035906020019184600183028401116401000000008311171561030157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506106ae945050505050565b61017e6004803603604081101561035857600080fd5b506001600160a01b03813581169160200135166107b6565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60035481565b6001600160a01b038316600090815260056020908152604080832033845290915281205482111561049a57600080fd5b6001600160a01b03841660009081526005602090815260408083203384529091529020805483900390556104cf8484846107d3565b5060015b9392505050565b60025460ff1681565b336000908152600460205260408120548211156104ff57600080fd5b3360008181526004602090815260409182902080548690039055600380548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a2506001919050565b60046020526000908152604090205481565b6001600160a01b03821660009081526004602052604081205482111561059257600080fd5b6001600160a01b03831660009081526005602090815260408083203384529091529020548211156105c257600080fd5b6001600160a01b0383166000818152600460209081526040808320805487900390556005825280832033845282529182902080548690039055600380548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a250600192915050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f65780601f106103cb576101008083540402835291602001916103f6565b60006106a53384846107d3565b50600192915050565b6000836106bb81856103fe565b156107ae57604051600160e01b638f4ffcb102815233600482018181526024830187905230604484018190526080606485019081528751608486015287516001600160a01b03871695638f4ffcb195948b94938b939192909160a490910190602085019080838360005b8381101561073d578181015183820152602001610725565b50505050905090810190601f16801561076a5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561078c57600080fd5b505af11580156107a0573d6000803e3d6000fd5b5050505060019150506104d3565b509392505050565b600560209081526000928352604080842090915290825290205481565b6001600160a01b0382166107e657600080fd5b6001600160a01b03831660009081526004602052604090205481111561080b57600080fd5b6001600160a01b0382166000908152600460205260409020548181011161083157600080fd5b6001600160a01b038083166000818152600460209081526040808320805495891680855282852080548981039091559486905281548801909155815187815291519390950194927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a36001600160a01b038084166000908152600460205260408082205492871682529020540181146108cf57fe5b5050505056fea165627a7a7230582032175afa007fe52ae20f86fb04359af67d81d0b0ace75657fc63c7c8ebbd30640029",
	"deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461020157806379cc67901461022757806395d89b4114610253578063a9059cbb1461025b578063cae9ca5114610287578063dd62ed3e14610342576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806342966c68146101e4575b600080fd5b6100c1610370565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b0381351690602001356103fe565b604080519115158252519081900360200190f35b61017e610464565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561046a565b6101ce6104da565b6040805160ff9092168252519081900360200190f35b610162600480360360208110156101fa57600080fd5b50356104e3565b61017e6004803603602081101561021757600080fd5b50356001600160a01b031661055b565b6101626004803603604081101561023d57600080fd5b506001600160a01b03813516906020013561056d565b6100c161063e565b6101626004803603604081101561027157600080fd5b506001600160a01b038135169060200135610698565b6101626004803603606081101561029d57600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156102cd57600080fd5b8201836020820111156102df57600080fd5b8035906020019184600183028401116401000000008311171561030157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506106ae945050505050565b61017e6004803603604081101561035857600080fd5b506001600160a01b03813581169160200135166107b6565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60035481565b6001600160a01b038316600090815260056020908152604080832033845290915281205482111561049a57600080fd5b6001600160a01b03841660009081526005602090815260408083203384529091529020805483900390556104cf8484846107d3565b5060015b9392505050565b60025460ff1681565b336000908152600460205260408120548211156104ff57600080fd5b3360008181526004602090815260409182902080548690039055600380548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a2506001919050565b60046020526000908152604090205481565b6001600160a01b03821660009081526004602052604081205482111561059257600080fd5b6001600160a01b03831660009081526005602090815260408083203384529091529020548211156105c257600080fd5b6001600160a01b0383166000818152600460209081526040808320805487900390556005825280832033845282529182902080548690039055600380548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a250600192915050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f65780601f106103cb576101008083540402835291602001916103f6565b60006106a53384846107d3565b50600192915050565b6000836106bb81856103fe565b156107ae57604051600160e01b638f4ffcb102815233600482018181526024830187905230604484018190526080606485019081528751608486015287516001600160a01b03871695638f4ffcb195948b94938b939192909160a490910190602085019080838360005b8381101561073d578181015183820152602001610725565b50505050905090810190601f16801561076a5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561078c57600080fd5b505af11580156107a0573d6000803e3d6000fd5b5050505060019150506104d3565b509392505050565b600560209081526000928352604080842090915290825290205481565b6001600160a01b0382166107e657600080fd5b6001600160a01b03831660009081526004602052604090205481111561080b57600080fd5b6001600160a01b0382166000908152600460205260409020548181011161083157600080fd5b6001600160a01b038083166000818152600460209081526040808320805495891680855282852080548981039091559486905281548801909155815187815291519390950194927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a36001600160a01b038084166000908152600460205260408082205492871682529020540181146108cf57fe5b5050505056fea165627a7a7230582032175afa007fe52ae20f86fb04359af67d81d0b0ace75657fc63c7c8ebbd30640029",
	"sourceMap": "88:441:101:-;;;166:26:98;;;-1:-1:-1;;166:26:98;190:2;166:26;;;163:364:101;5:2:-1;;;;30:1;27;20:12;5:2;163:364:101;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;163:364:101;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;163:364:101;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;;1134:8:98;;;;1120:2;:23;1104:39;;1090:11;:53;;;1205:10;1134:8;1195:21;;;:9;:21;;;;;;;:35;;;;1288:16;;163:364:101;;-1:-1:-1;263:13:101;;-1:-1:-1;278:9:101;;-1:-1:-1;163:364:101;;1288:16:98;;;;;;:::i;:::-;-1:-1:-1;1379:20:98;;;;:6;;:20;;;;;:::i;:::-;-1:-1:-1;;324:1:101;313:12;;-1:-1:-1;;313:12:101;;;;;;;;373:8;359:2;:23;343:39;;;;329:11;:53;;;444:10;313:8;434:21;;;:9;:21;;;;;:35;-1:-1:-1;88:441:101;;-1:-1:-1;;;88:441:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;88:441:101;;;-1:-1:-1;88:441:101;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
	"deployedSourceMap": "88:441:101:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;88:441:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;122:18:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;122:18:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3327:191;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3327:191:98;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;264:26;;;:::i;:::-;;;;;;;;;;;;;;;;2831:264;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2831:264:98;;;;;;;;;;;;;;;;;:::i;166:26::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4318:335;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4318:335:98;;:::i;338:45::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;338:45:98;-1:-1:-1;;;;;338:45:98;;:::i;4879:558::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4879:558:98;;;;;;;;:::i;143:20::-;;;:::i;2458:134::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2458:134:98;;;;;;;;:::i;3876:300::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;3876:300:98;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3876:300:98;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3876:300:98;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3876:300:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3876:300:98;;-1:-1:-1;3876:300:98;;-1:-1:-1;;;;;3876:300:98:i;386:66::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;386:66:98;;;;;;;;;;:::i;122:18::-;;;;;;;;;;;;;;;-1:-1:-1;;122:18:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3327:191::-;3422:10;3394:12;3412:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;3412:31:98;;;;;;;;;;;:40;;;3461:38;;;;;;;3394:12;;3412:31;;3422:10;;3461:38;;;;;;;;-1:-1:-1;3510:4:98;3327:191;;;;:::o;264:26::-;;;;:::o;2831:264::-;-1:-1:-1;;;;;2949:16:98;;2913:12;2949:16;;;:9;:16;;;;;;;;2966:10;2949:28;;;;;;;;2939:38;;;2931:47;;;;;;-1:-1:-1;;;;;3005:16:98;;;;;;:9;:16;;;;;;;;3022:10;3005:28;;;;;;;:38;;;;;;;3047:29;3015:5;3064:3;3037:6;3047:9;:29::i;:::-;-1:-1:-1;3087:4:98;2831:264;;;;;;:::o;166:26::-;;;;;;:::o;4318:335::-;4400:10;4364:12;4390:21;;;:9;:21;;;;;;:31;-1:-1:-1;4390:31:98;4382:40;;;;;;4472:10;4462:21;;;;:9;:21;;;;;;;;;:31;;;;;;;4536:11;:21;;;;;;;4610:24;;;;;;;;;;;;;;;;;-1:-1:-1;4645:4:98;4318:335;;;:::o;338:45::-;;;;;;;;;;;;;:::o;4879:558::-;-1:-1:-1;;;;;4970:16:98;;4944:12;4970:16;;;:9;:16;;;;;;:26;-1:-1:-1;4970:26:98;4962:35;;;;;;-1:-1:-1;;;;;5077:16:98;;;;;;:9;:16;;;;;;;;5094:10;5077:28;;;;;;;;5067:38;;;5059:47;;;;;;-1:-1:-1;;;;;5132:16:98;;;;;;:9;:16;;;;;;;;:26;;;;;;;5224:9;:16;;;;;5241:10;5224:28;;;;;;;;:38;;;;;;;5318:11;:21;;;;;;;5399:19;;;;;;;;;;;;;;;;;-1:-1:-1;5429:4:98;4879:558;;;;:::o;143:20::-;;;;;;;;;;;;;;;-1:-1:-1;;143:20:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2458:134;2521:12;2539:34;2549:10;2561:3;2566:6;2539:9;:34::i;:::-;-1:-1:-1;2584:4:98;2458:134;;;;:::o;3876:300::-;3975:12;4033:8;4050:25;4033:8;4068:6;4050:7;:25::i;:::-;4046:127;;;4082:70;;-1:-1:-1;;;;;4082:70:98;;4106:10;4082:70;;;;;;;;;;;;4134:4;4082:70;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4082:23:98;;;;;4106:10;4118:6;;4134:4;4141:10;;4082:70;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4082:70:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4082:70:98;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4082:70:98;;;;4164:4;4157:11;;;;;4046:127;3876:300;;;;;;:::o;386:66::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1544:740::-;-1:-1:-1;;;;;1682:17:98;;1674:26;;;;;;-1:-1:-1;;;;;1748:16:98;;;;;;:9;:16;;;;;;:26;-1:-1:-1;1748:26:98;1740:35;;;;;;-1:-1:-1;;;;;1838:14:98;;;;;;:9;:14;;;;;;1812:23;;;:40;1804:49;;;;;;-1:-1:-1;;;;;1946:14:98;;;1903:21;1946:14;;;:9;:14;;;;;;;;;;1927:16;;;;;;;;;;;1994:26;;;;;;2059:14;;;;:24;;;;;;;2092:28;;;;;;;1927:33;;;;;:16;2092:28;;;;;;;;;;;-1:-1:-1;;;;;2245:14:98;;;;;;;:9;:14;;;;;;;2226:16;;;;;;;;:33;:53;;2219:61;;;;1544:740;;;;:::o",
	"source": "pragma solidity >=0.5.4 <0.6.0;\n\nimport './TokenERC20.sol';\n\n/**\n * @title TokenTwo\n */\ncontract TokenTwo is TokenERC20 {\n\t/**\n\t * @dev Constructor function\n\t */\n\tconstructor(uint256 initialSupply, string memory tokenName, string memory tokenSymbol)\n\t\tTokenERC20(initialSupply, tokenName, tokenSymbol) public {\n\t\tdecimals = 2;\n\t\ttotalSupply = initialSupply * 10 ** uint256(decimals);  // Update total supply with the decimal amount\n\t\tbalanceOf[msg.sender] = totalSupply;                // Give the creator all initial tokens\n\t}\n}\n",
	"sourcePath": "/usr/local/ao-contracts/contracts/TokenTwo.sol",
	"ast": {
		"absolutePath": "/usr/local/ao-contracts/contracts/TokenTwo.sol",
		"exportedSymbols": {
			"TokenTwo": [35214]
		},
		"id": 35215,
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 35174,
				"literals": ["solidity", ">=", "0.5", ".4", "<", "0.6", ".0"],
				"nodeType": "PragmaDirective",
				"src": "0:31:101"
			},
			{
				"absolutePath": "/usr/local/ao-contracts/contracts/TokenERC20.sol",
				"file": "./TokenERC20.sol",
				"id": 35175,
				"nodeType": "ImportDirective",
				"scope": 35215,
				"sourceUnit": 35089,
				"src": "33:26:101",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"baseContracts": [
					{
						"arguments": null,
						"baseName": {
							"contractScope": null,
							"id": 35176,
							"name": "TokenERC20",
							"nodeType": "UserDefinedTypeName",
							"referencedDeclaration": 35088,
							"src": "109:10:101",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_TokenERC20_$35088",
								"typeString": "contract TokenERC20"
							}
						},
						"id": 35177,
						"nodeType": "InheritanceSpecifier",
						"src": "109:10:101"
					}
				],
				"contractDependencies": [35088],
				"contractKind": "contract",
				"documentation": "@title TokenTwo",
				"fullyImplemented": true,
				"id": 35214,
				"linearizedBaseContracts": [35214, 35088],
				"name": "TokenTwo",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"body": {
							"id": 35212,
							"nodeType": "Block",
							"src": "309:218:101",
							"statements": [
								{
									"expression": {
										"argumentTypes": null,
										"id": 35193,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"argumentTypes": null,
											"id": 35191,
											"name": "decimals",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 34724,
											"src": "313:8:101",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"argumentTypes": null,
											"hexValue": "32",
											"id": 35192,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "324:1:101",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"src": "313:12:101",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"id": 35194,
									"nodeType": "ExpressionStatement",
									"src": "313:12:101"
								},
								{
									"expression": {
										"argumentTypes": null,
										"id": 35203,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"argumentTypes": null,
											"id": 35195,
											"name": "totalSupply",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 34726,
											"src": "329:11:101",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 35202,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"id": 35196,
												"name": "initialSupply",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 35179,
												"src": "343:13:101",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"argumentTypes": null,
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 35201,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"argumentTypes": null,
													"hexValue": "3130",
													"id": 35197,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "359:2:101",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10_by_1",
														"typeString": "int_const 10"
													},
													"value": "10"
												},
												"nodeType": "BinaryOperation",
												"operator": "**",
												"rightExpression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 35199,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34724,
															"src": "373:8:101",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 35198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "365:7:101",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": "uint256"
													},
													"id": 35200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "365:17:101",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "359:23:101",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "343:39:101",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "329:53:101",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 35204,
									"nodeType": "ExpressionStatement",
									"src": "329:53:101"
								},
								{
									"expression": {
										"argumentTypes": null,
										"id": 35210,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"argumentTypes": null,
											"baseExpression": {
												"argumentTypes": null,
												"id": 35205,
												"name": "balanceOf",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 34730,
												"src": "434:9:101",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 35208,
											"indexExpression": {
												"argumentTypes": null,
												"expression": {
													"argumentTypes": null,
													"id": 35206,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 35673,
													"src": "444:3:101",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 35207,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"referencedDeclaration": null,
												"src": "444:10:101",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "434:21:101",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"argumentTypes": null,
											"id": 35209,
											"name": "totalSupply",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 34726,
											"src": "458:11:101",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "434:35:101",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 35211,
									"nodeType": "ExpressionStatement",
									"src": "434:35:101"
								}
							]
						},
						"documentation": "@dev Constructor function",
						"id": 35213,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [
							{
								"arguments": [
									{
										"argumentTypes": null,
										"id": 35186,
										"name": "initialSupply",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 35179,
										"src": "263:13:101",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									{
										"argumentTypes": null,
										"id": 35187,
										"name": "tokenName",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 35181,
										"src": "278:9:101",
										"typeDescriptions": {
											"typeIdentifier": "t_string_memory_ptr",
											"typeString": "string memory"
										}
									},
									{
										"argumentTypes": null,
										"id": 35188,
										"name": "tokenSymbol",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 35183,
										"src": "289:11:101",
										"typeDescriptions": {
											"typeIdentifier": "t_string_memory_ptr",
											"typeString": "string memory"
										}
									}
								],
								"id": 35189,
								"modifierName": {
									"argumentTypes": null,
									"id": 35185,
									"name": "TokenERC20",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 35088,
									"src": "252:10:101",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_contract$_TokenERC20_$35088_$",
										"typeString": "type(contract TokenERC20)"
									}
								},
								"nodeType": "ModifierInvocation",
								"src": "252:49:101"
							}
						],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 35184,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 35179,
									"name": "initialSupply",
									"nodeType": "VariableDeclaration",
									"scope": 35213,
									"src": "175:21:101",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 35178,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "175:7:101",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 35181,
									"name": "tokenName",
									"nodeType": "VariableDeclaration",
									"scope": 35213,
									"src": "198:23:101",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 35180,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "198:6:101",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 35183,
									"name": "tokenSymbol",
									"nodeType": "VariableDeclaration",
									"scope": 35213,
									"src": "223:25:101",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 35182,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "223:6:101",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "internal"
								}
							],
							"src": "174:75:101"
						},
						"returnParameters": {
							"id": 35190,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "309:0:101"
						},
						"scope": 35214,
						"src": "163:364:101",
						"stateMutability": "nonpayable",
						"superFunction": null,
						"visibility": "public"
					}
				],
				"scope": 35215,
				"src": "88:441:101"
			}
		],
		"src": "0:530:101"
	},
	"legacyAST": {
		"absolutePath": "/usr/local/ao-contracts/contracts/TokenTwo.sol",
		"exportedSymbols": {
			"TokenTwo": [35214]
		},
		"id": 35215,
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 35174,
				"literals": ["solidity", ">=", "0.5", ".4", "<", "0.6", ".0"],
				"nodeType": "PragmaDirective",
				"src": "0:31:101"
			},
			{
				"absolutePath": "/usr/local/ao-contracts/contracts/TokenERC20.sol",
				"file": "./TokenERC20.sol",
				"id": 35175,
				"nodeType": "ImportDirective",
				"scope": 35215,
				"sourceUnit": 35089,
				"src": "33:26:101",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"baseContracts": [
					{
						"arguments": null,
						"baseName": {
							"contractScope": null,
							"id": 35176,
							"name": "TokenERC20",
							"nodeType": "UserDefinedTypeName",
							"referencedDeclaration": 35088,
							"src": "109:10:101",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_TokenERC20_$35088",
								"typeString": "contract TokenERC20"
							}
						},
						"id": 35177,
						"nodeType": "InheritanceSpecifier",
						"src": "109:10:101"
					}
				],
				"contractDependencies": [35088],
				"contractKind": "contract",
				"documentation": "@title TokenTwo",
				"fullyImplemented": true,
				"id": 35214,
				"linearizedBaseContracts": [35214, 35088],
				"name": "TokenTwo",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"body": {
							"id": 35212,
							"nodeType": "Block",
							"src": "309:218:101",
							"statements": [
								{
									"expression": {
										"argumentTypes": null,
										"id": 35193,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"argumentTypes": null,
											"id": 35191,
											"name": "decimals",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 34724,
											"src": "313:8:101",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"argumentTypes": null,
											"hexValue": "32",
											"id": 35192,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "324:1:101",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"src": "313:12:101",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"id": 35194,
									"nodeType": "ExpressionStatement",
									"src": "313:12:101"
								},
								{
									"expression": {
										"argumentTypes": null,
										"id": 35203,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"argumentTypes": null,
											"id": 35195,
											"name": "totalSupply",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 34726,
											"src": "329:11:101",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 35202,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"id": 35196,
												"name": "initialSupply",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 35179,
												"src": "343:13:101",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"argumentTypes": null,
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 35201,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"argumentTypes": null,
													"hexValue": "3130",
													"id": 35197,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "359:2:101",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10_by_1",
														"typeString": "int_const 10"
													},
													"value": "10"
												},
												"nodeType": "BinaryOperation",
												"operator": "**",
												"rightExpression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 35199,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34724,
															"src": "373:8:101",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 35198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "365:7:101",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": "uint256"
													},
													"id": 35200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "365:17:101",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "359:23:101",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "343:39:101",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "329:53:101",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 35204,
									"nodeType": "ExpressionStatement",
									"src": "329:53:101"
								},
								{
									"expression": {
										"argumentTypes": null,
										"id": 35210,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"argumentTypes": null,
											"baseExpression": {
												"argumentTypes": null,
												"id": 35205,
												"name": "balanceOf",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 34730,
												"src": "434:9:101",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 35208,
											"indexExpression": {
												"argumentTypes": null,
												"expression": {
													"argumentTypes": null,
													"id": 35206,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 35673,
													"src": "444:3:101",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 35207,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"referencedDeclaration": null,
												"src": "444:10:101",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "434:21:101",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"argumentTypes": null,
											"id": 35209,
											"name": "totalSupply",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 34726,
											"src": "458:11:101",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "434:35:101",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 35211,
									"nodeType": "ExpressionStatement",
									"src": "434:35:101"
								}
							]
						},
						"documentation": "@dev Constructor function",
						"id": 35213,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [
							{
								"arguments": [
									{
										"argumentTypes": null,
										"id": 35186,
										"name": "initialSupply",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 35179,
										"src": "263:13:101",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									{
										"argumentTypes": null,
										"id": 35187,
										"name": "tokenName",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 35181,
										"src": "278:9:101",
										"typeDescriptions": {
											"typeIdentifier": "t_string_memory_ptr",
											"typeString": "string memory"
										}
									},
									{
										"argumentTypes": null,
										"id": 35188,
										"name": "tokenSymbol",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 35183,
										"src": "289:11:101",
										"typeDescriptions": {
											"typeIdentifier": "t_string_memory_ptr",
											"typeString": "string memory"
										}
									}
								],
								"id": 35189,
								"modifierName": {
									"argumentTypes": null,
									"id": 35185,
									"name": "TokenERC20",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 35088,
									"src": "252:10:101",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_contract$_TokenERC20_$35088_$",
										"typeString": "type(contract TokenERC20)"
									}
								},
								"nodeType": "ModifierInvocation",
								"src": "252:49:101"
							}
						],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 35184,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 35179,
									"name": "initialSupply",
									"nodeType": "VariableDeclaration",
									"scope": 35213,
									"src": "175:21:101",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 35178,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "175:7:101",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 35181,
									"name": "tokenName",
									"nodeType": "VariableDeclaration",
									"scope": 35213,
									"src": "198:23:101",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 35180,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "198:6:101",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 35183,
									"name": "tokenSymbol",
									"nodeType": "VariableDeclaration",
									"scope": 35213,
									"src": "223:25:101",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 35182,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "223:6:101",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "internal"
								}
							],
							"src": "174:75:101"
						},
						"returnParameters": {
							"id": 35190,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "309:0:101"
						},
						"scope": 35214,
						"src": "163:364:101",
						"stateMutability": "nonpayable",
						"superFunction": null,
						"visibility": "public"
					}
				],
				"scope": 35215,
				"src": "88:441:101"
			}
		],
		"src": "0:530:101"
	},
	"compiler": {
		"name": "solc",
		"version": "0.5.6+commit.b259423e.Emscripten.clang"
	},
	"networks": {},
	"schemaVersion": "3.0.2",
	"updatedAt": "2019-04-09T21:05:06.373Z",
	"devdoc": {
		"methods": {
			"approve(address,uint256)": {
				"params": {
					"_spender": "The address authorized to spend",
					"_value": "the max amount they can spend"
				}
			},
			"approveAndCall(address,uint256,bytes)": {
				"params": {
					"_extraData": "some extra information to send to the approved contract",
					"_spender": "The address authorized to spend",
					"_value": "the max amount they can spend"
				}
			},
			"burn(uint256)": {
				"params": {
					"_value": "the amount of money to burn"
				}
			},
			"burnFrom(address,uint256)": {
				"params": {
					"_from": "the address of the sender",
					"_value": "the amount of money to burn"
				}
			},
			"constructor": {
				"details": "Constructor function"
			},
			"transfer(address,uint256)": {
				"params": {
					"_to": "The address of the recipient",
					"_value": "the amount to send"
				}
			},
			"transferFrom(address,address,uint256)": {
				"params": {
					"_from": "The address of the sender",
					"_to": "The address of the recipient",
					"_value": "the amount to send"
				}
			}
		},
		"title": "TokenTwo"
	},
	"userdoc": {
		"methods": {
			"approve(address,uint256)": {
				"notice": "Set allowance for other address\t * Allows `_spender` to spend no more than `_value` tokens in your behalf"
			},
			"approveAndCall(address,uint256,bytes)": {
				"notice": "Set allowance for other address and notify\t * Allows `_spender` to spend no more than `_value` tokens in your behalf, and then ping the contract about it"
			},
			"burn(uint256)": {
				"notice": "Destroy tokens\t * Remove `_value` tokens from the system irreversibly"
			},
			"burnFrom(address,uint256)": {
				"notice": "Destroy tokens from other account\t * Remove `_value` tokens from the system irreversibly on behalf of `_from`."
			},
			"transfer(address,uint256)": {
				"notice": "Transfer tokens\t * Send `_value` tokens to `_to` from your account"
			},
			"transferFrom(address,address,uint256)": {
				"notice": "Transfer tokens from other address\t * Send `_value` tokens to `_to` in behalf of `_from`"
			}
		}
	}
}
